{% extends 'base.html.twig' %}

{% block body %}
<div class="video-screen" style="background-image: url(stream.mjpeg)">
  <header class="navbar navbar-expand-sm navbar-dark bg-semi-dark sticky-top">
    <a class="navbar-brand" href="{{ path('index') }}">CATPOO</a>

    <button class="navbar-toggler" type="button"
      data-toggle="collapse" data-target="#navbar-collapsible-section"
      aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbar-collapsible-section">
      <div class="flex-grow-1"></div>
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" href="#" id="restart-motion-service" title="Restart Motion Service">
            <i class="fab fa fa-refresh"></i> Motion
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#" id="go-fullscreen">
            <i class="fab fa fa-arrows-alt"></i> Fullscreen
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-danger reset-btn" href="#" draggable="false">
            <i class="fab fa fa-window-close"></i> Stop Motors
          </a>
        </li>
      </ul>
    </div>
  </header>

  <div class="robot-vision">
    <!-- mainly used for spacing -->
  </div>

  <div class="robot-controls" id="robot-controls">
    {% include "partial/robot-controls.html.twig" %}
  </div>

</div><!-- .video-screen -->
{% endblock %}

{% block scripts %}
{{ parent() }}
<script>
require([
  'jquery',
  'lodash',
  'screenfull',
  'catpoo',
],
function ($, _, screenfull) {
  'use strict';

  var MIN_TIME = 100;

  window.console.log('Application should now start');

  var reset = _.throttle(function () {
    $.get("{{ path('command_reset') }}");
  }, 500, {leading: false, trailing: true});

  $('body').on('click', '.reset-btn', function () {
    reset();
  });

  var moveForwardInterval = null;

  $('#go-fullscreen').click(function () {
    screenfull.toggle();
  });

  var ControlButton = function (selector, callback) {
    this.selector = selector;
    this.callback = callback;
    this.interval = null;

    this.startCallback = _.bind(function () {
      this.callback();

      if (this.interval) {
        clearInterval(this.interval);
      }

      this.interval = setInterval(this.callback, MIN_TIME);
    }, this);

    this.stopCallback = _.bind(function () {
      if (this.interval) {
        window.console.log('Clearing interval', this.interval);
        clearInterval(this.interval);
        reset();
        this.interval = null;
      }
    }, this);

    this.toggleCallback = _.throttle(_.bind(function () {
      this.startCallback();
    }, this), 500, {leading: false, trailing: true});

    $('body').on('mousedown', selector, this.startCallback);
    $('body').on('dblclick', selector, this.toggleCallback);
    $('body').on('mouseup', this.stopCallback);
  };

  var moveForward = _.throttle(function () {
    $.get("{{ path('command_translate', {'x': 0, 'y': 50}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var moveBackward = _.throttle(function () {
    $.get("{{ path('command_translate', {'x': 0, 'y': -50}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var moveLeft = _.throttle(function () {
    $.get("{{ path('command_translate', {'x': -50, 'y': 0}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var moveRight = _.throttle(function () {
    $.get("{{ path('command_translate', {'x': 50, 'y': 0}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var turnLeft = _.throttle(function () {
    $.get("{{ path('command_rotate', {'d': -25}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var turnRight = _.throttle(function () {
    $.get("{{ path('command_rotate', {'d': 25}) }}");
  }, MIN_TIME, {leading: true, trailing: false});

  var moveForwardButton = new ControlButton('.move-forward-btn', moveForward);
  var moveBackwardButton = new ControlButton('.move-backward-btn', moveBackward);
  var moveLeftButton = new ControlButton('.move-left-btn', moveLeft);
  var moveRightButton = new ControlButton('.move-right-btn', moveRight);
  var turnLeftButton = new ControlButton('.turn-left-btn', turnLeft);
  var turnRightButton = new ControlButton('.turn-right-btn', turnRight);

  $('body').on('click', '#restart-motion-service', function () {
    $.get("{{ path('command_restart_motion') }}");
  });

});
</script>
{% endblock %}
